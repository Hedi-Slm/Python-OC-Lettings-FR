name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - '**'

env:
  DOCKER_IMAGE: hedislm/letting_docker

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DJANGO_DEBUG: ${{ vars.DJANGO_DEBUG_PROD }}
      DJANGO_ALLOWED_HOSTS: ${{ vars.DJANGO_ALLOWED_HOSTS_PROD }}
      DJANGO_MIDDLEWARE: ${{ vars.DJANGO_MIDDLEWARE_PROD }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      DJANGO_STATICFILES_STORAGE: ${{ vars.DJANGO_STATICFILES_STORAGE_PROD }}
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install whitenoise
          pip install gunicorn
      
      - name: Run lint
        run: flake8 .
      
      - name: Run tests with coverage
        run: pytest --cov --cov-fail-under=80

  build:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.build.outputs.tag }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Build and tag Docker image
        id: build
        run: |
          TAG=${{ github.sha }}
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          docker build -t ${{ env.DOCKER_IMAGE }}:$TAG -t ${{ env.DOCKER_IMAGE }}:latest .
      
      - name: Push Docker image
        run: |
          docker push ${{ env.DOCKER_IMAGE }}:${{ steps.build.outputs.tag }}
          docker push ${{ env.DOCKER_IMAGE }}:latest

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger Render deployment
        run: |
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
